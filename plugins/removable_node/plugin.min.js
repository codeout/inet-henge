!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e(require("d3"));else if("function"==typeof define&&define.amd)define(["d3"],e);else{var s="object"==typeof exports?e(require("d3")):e(t.d3);for(var r in s)("object"==typeof exports?exports:t)[r]=s[r]}}(self,(function(t){return(()=>{"use strict";var e={990:e=>{e.exports=t}},s={};function r(t){var i=s[t];if(void 0!==i)return i.exports;var o=s[t]={exports:{}};return e[t](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var s in e)r.o(e,s)&&!r.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var i={};return(()=>{r.r(i),r.d(i,{RemovableNodePlugin:()=>p,default:()=>u});var t=r(990);class e{constructor(t,e){this.data=t,this.extraKey=e}get(t){return this.slice(t).filter((t=>"string"==typeof t.value))}slice(t){return this.data?this.extraKey?this.sliceWithExtraKey(t):this.sliceWithoutExtraKey(t):[]}sliceWithExtraKey(t){const e=[];return t.forEach((t=>{this.data[t]&&this.data[t][this.extraKey]&&e.push({class:t,value:this.data[t][this.extraKey]})})),e}sliceWithoutExtraKey(t){const e=[];return t.forEach((t=>{this.data[t]&&e.push({class:t,value:this.data[t]})})),e}}function s(t){return t.replace(" ","-").toLowerCase()}class o{constructor(t,s,r,i,o){this.id=s,this.color=i,this.tooltip=o,this.name=t.name,this.group="string"==typeof t.group?[t.group]:t.group||[],this.icon=t.icon,this.metaList=new e(t.meta).get(r),this.meta=t.meta,this.extraClass=t.class||"",this.width=60,this.height=40,this.padding=3,this.tspanOffset="1.1em",this.register(s,t.name)}register(t,e){c.all=c.all||{},c.all[e]=t}transform(){return`translate(${this.x-this.width/2+this.padding}, ${this.y-this.height/2+this.padding})`}nodeWidth(){return this.width-2*this.padding}nodeHeight(){return this.height-2*this.padding}xForText(){return this.width/2}yForText(){return this.height/2}static idByName(t){if(void 0===c.all[t])throw`Unknown node "${t}"`;return c.all[t]}static render(t,e){const r=t.selectAll(".node").data(e).enter().append("g").attr("id",(t=>s(t.name))).attr("name",(t=>t.name)).attr("transform",(t=>t.transform()));return r.each((function(t){t.icon?c.appendImage(this):c.appendRect(this),c.appendText(this)})),r}static appendText(e){const s=t.select(e).append("text").attr("text-anchor","middle").attr("x",(t=>t.xForText())).attr("y",(t=>t.yForText()));s.append("tspan").text((t=>t.name)).attr("x",(t=>t.xForText())),s.each((t=>{t.tooltip||c.appendTspans(s,t.metaList)}))}static appendTspans(t,e){e.forEach((e=>{t.append("tspan").attr("x",(t=>t.xForText())).attr("dy",(t=>t.tspanOffset)).attr("class",e.class).text(e.value)}))}static appendImage(e){t.select(e).attr("class",(t=>`node image ${s(t.name)} ${t.extraClass}`)).append("image").attr("xlink:href",(t=>t.icon)).attr("width",(t=>t.nodeWidth())).attr("height",(t=>t.nodeHeight()))}static appendRect(e){t.select(e).attr("class",(t=>`node rect ${s(t.name)} ${t.extraClass}`)).append("rect").attr("width",(t=>t.nodeWidth())).attr("height",(t=>t.nodeHeight())).attr("rx",5).attr("ry",5).style("fill",(t=>t.color()))}static tick(t){t.attr("transform",(t=>t.transform()))}static setPosition(t,e){t.attr("transform",((t,s)=>(t.x=e[s].x,t.y=e[s].y,t.transform())))}static reset(){c.all=null}}const a=e=>class extends e{constructor(e,s,r,i,o){super(e,s,r,i,o),this.dispatch=t.dispatch("rendered")}static render(t,e){const s=super.render(t,e);return s.each((function(t){t.dispatch.rendered(this)})),s}on(t,e){this.dispatch.on(t,e)}},n=t=>{class e extends t{constructor(t,s,r,i,o){super(t,s,r,i,o);for(const a of e.pluginConstructors)a.bind(this)(t,s,r,i,o)}static registerConstructor(t){e.pluginConstructors.push(t)}}return e.pluginConstructors=[],e};class l extends(a(o)){}class c extends(n(l)){}var d;class h extends c{toggleSelected(){this.selected=!this.selected}reset(){this.selected=!1}textColor(){return this.selected?"red":"black"}}const p=(d=class e{static load(t,s,r,i={}){i.showKey&&(e.showKey=i.showKey),i.hideKey&&(e.hideKey=i.hideKey),s.registerConstructor((function(t,s,r,i,o){this.selected=!1,this.on("rendered",(t=>{e.configureRemovableNode(t)}))})),e.configureRemovableNodes(),s.prototype.toggleSelected=h.prototype.toggleSelected,s.prototype.reset=h.prototype.reset,s.prototype.textColor=h.prototype.textColor}static configureRemovableNodes(){t.select("body").on("keydown",(()=>{switch(t.event.key){case e.showKey:e.show();break;case e.hideKey:e.hide()}}))}static configureRemovableNode(s){t.select(s).on("click.removableNode",(function(s){t.event.defaultPrevented||(s.toggleSelected(),e.applyColor(this))}))}static applyColor(e){t.select(e).select("text tspan").style("fill",(t=>t.textColor()))}static show(){t.selectAll(".node").style("display","inline").each((function(t){t.reset(),e.applyColor(this)})),e.showLinks()}static hide(){t.selectAll(".node").style("display",(t=>t.selected?(e.hideLinks(t.name),e.hideToolTips(t.name),"none"):"inline"))}static showLinks(){t.selectAll(".link").style("display","inline")}static hideLinks(e){t.selectAll(`.link.${s(e)}`).style("display","none")}static hideToolTips(e){t.selectAll(`.tooltip.${s(e)}`).attr("visibility","hidden")}},d.showKey="Escape",d.hideKey="d",d),u=p})(),i})()}));
//# sourceMappingURL=plugin.min.js.map