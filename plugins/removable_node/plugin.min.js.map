{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///external \"d3\"","webpack:///./src/meta_data.ts","webpack:///./src/util.ts","webpack:///./src/node.ts","webpack:///./plugins/removable_node/src/plugin.ts"],"names":["root","factory","exports","module","require","define","amd","a","i","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","MetaData","data","extraKey","keys","this","slice","filter","k","sliceWithExtraKey","sliceWithoutExtraKey","forEach","push","class","classify","string","replace","toLowerCase","id","metaKeys","color","tooltip","group","icon","meta","extraClass","width","height","padding","tspanOffset","register","Node","all","x","y","undefined","layer","nodes","node","selectAll","enter","append","attr","transform","each","appendImage","appendRect","appendText","container","text","xForText","yForText","appendTspans","nodeWidth","nodeHeight","style","position","Eventable","Base","super","dispatch","render","rendered","callback","on","Pluggable","constructor","pluginConstructors","func","selected","RemovableNodePlugin","Group","Link","options","showKey","hideKey","registerConstructor","element","configureRemovableNode","configureRemovableNodes","toggleSelected","reset","textColor","show","hide","defaultPrevented","applyColor","select","showLinks","hideLinks","hideToolTips","nodeName"],"mappings":"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","file":"plugin.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"d3\")) : factory(root[\"d3\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","export type MetaDataType = { class: string, value: any }  // eslint-disable-line @typescript-eslint/no-explicit-any\n\nexport class MetaData {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(private data: Record<string, any>, private extraKey?: string) {\n  }\n\n  get(keys: string[]): MetaDataType[] {\n    return this.slice(keys).filter((k) => typeof k.value === \"string\");\n  }\n\n  slice(keys: string[]): MetaDataType[] {\n    if (!this.data)\n      return [];\n\n    if (this.extraKey)\n      return this.sliceWithExtraKey(keys);\n    else\n      return this.sliceWithoutExtraKey(keys);\n  }\n\n  sliceWithExtraKey(keys: string[]): MetaDataType[] {\n    const data = [];\n\n    keys.forEach((k) => {\n      if (this.data[k] && this.data[k][this.extraKey])\n        data.push({ class: k, value: this.data[k][this.extraKey] });\n    });\n\n    return data;\n  }\n\n  sliceWithoutExtraKey(keys: string[]): MetaDataType[] {\n    const data = [];\n\n    keys.forEach((k) => {\n      if (this.data[k])\n        data.push({ class: k, value: this.data[k] });\n    });\n\n    return data;\n  }\n}\n","export function classify(string: string): string {\n  return string.replace(\" \", \"-\").toLowerCase();\n}\n","import * as d3 from \"d3\";\n\nimport { MetaData, MetaDataType } from \"./meta_data\";\nimport { NodePosition } from \"./position_cache\";\nimport { classify } from \"./util\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type Constructor = (data: NodeDataType, id: number, metaKeys: string[], color: any, tooltip: boolean) => void;\n\nexport type NodeDataType = {\n  name: string,\n  group: string[],\n  icon: string,\n  meta: Record<string, any>,  // eslint-disable-line @typescript-eslint/no-explicit-any\n  class: string,\n}\n\nclass NodeBase {\n  private static all: Record<string, any>;  // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  public name: string;\n  public group: string[];\n  public meta: MetaDataType[];\n  public x: number;\n  public y: number;\n\n  private icon: string;\n  private extraClass: string;\n  private width: number;\n  private height: number;\n  private padding: number;\n  private tspanOffset: string;\n\n  // Fix @types/d3/index.d.ts. Should be \"d3.scale.Ordinal<number, string>\" but \"d3.scale.Ordinal<string, string>\" somehow\n  // Also, it should have accepted undefined\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(data: NodeDataType, public id: number, metaKeys: string[], private color: any, private tooltip: boolean) {\n    this.name = data.name;\n    this.group = typeof data.group === \"string\" ? [data.group] : (data.group || []);\n    this.icon = data.icon;\n    this.meta = new MetaData(data.meta).get(metaKeys);\n    this.extraClass = data.class || \"\";\n\n    this.width = 60;\n    this.height = 40;\n    this.padding = 3;\n    this.tspanOffset = \"1.1em\";\n\n    this.register(id, data.name);\n  }\n\n  register(id: number, name: string): void {\n    Node.all = Node.all || {};\n    Node.all[name] = id;\n  }\n\n  transform(): string {\n    const x = this.x - this.width / 2 + this.padding;\n    const y = this.y - this.height / 2 + this.padding;\n    return `translate(${x}, ${y})`;\n  }\n\n  nodeWidth(): number {\n    return this.width - 2 * this.padding;\n  }\n\n  nodeHeight(): number {\n    return this.height - 2 * this.padding;\n  }\n\n  xForText(): number {\n    return this.width / 2;\n  }\n\n  yForText(): number {\n    return this.height / 2;\n  }\n\n  static idByName(name: string): number {\n    if (Node.all[name] === undefined)\n      throw `Unknown node \"${name}\"`;\n    return Node.all[name];\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static render(layer: d3.Selection<any>, nodes: Node[]): d3.Selection<Node> {\n    const node = layer.selectAll(\".node\")\n      .data(nodes)\n      .enter()\n      .append(\"g\")\n      .attr(\"id\", (d) => classify(d.name))\n      .attr(\"name\", (d) => d.name)\n      .attr(\"transform\", (d) => d.transform());\n\n    node.each(function(this: SVGGElement, d) {\n      if (d.icon)\n        Node.appendImage(this);\n      else\n        Node.appendRect(this);\n\n      Node.appendText(this);\n    });\n\n    return node;\n  }\n\n  private static appendText(container: SVGGElement): void {\n    const text = (d3.select(container) as d3.Selection<Node>).append(\"text\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"x\", (d) => d.xForText())\n      .attr(\"y\", (d) => d.yForText());\n    text.append(\"tspan\")\n      .text((d) => d.name)\n      .attr(\"x\", (d) => d.xForText());\n\n    text.each((d) => {\n      // Show meta only when \"tooltip\" option is not configured\n      if (!d.tooltip) {\n        Node.appendTspans(text, d.meta);\n      }\n    });\n  }\n\n  private static appendTspans(container: d3.Selection<Node>, meta: MetaDataType[]): void {\n    meta.forEach((m) => {\n      container.append(\"tspan\")\n        .attr(\"x\", (d) => d.xForText())\n        .attr(\"dy\", (d) => d.tspanOffset)\n        .attr(\"class\", m.class)\n        .text(m.value);\n    });\n  }\n\n  private static appendImage(container: SVGGElement): void {\n    (d3.select(container) as d3.Selection<Node>)\n      .attr(\"class\", (d) => `node image ${classify(d.name)} ${d.extraClass}`)\n      .append(\"image\")\n      .attr(\"xlink:href\", (d) => d.icon)\n      .attr(\"width\", (d) => d.nodeWidth())\n      .attr(\"height\", (d) => d.nodeHeight());\n  }\n\n  private static appendRect(container: SVGGElement): void {\n    (d3.select(container) as d3.Selection<Node>)\n      .attr(\"class\", (d) => `node rect ${classify(d.name)} ${d.extraClass}`)\n      .append(\"rect\")\n      .attr(\"width\", (d) => d.nodeWidth())\n      .attr(\"height\", (d) => d.nodeHeight())\n      .attr(\"rx\", 5)\n      .attr(\"ry\", 5)\n      .style(\"fill\", (d) => d.color());\n  }\n\n  static tick(node: d3.Selection<Node>): void {\n    node.attr(\"transform\", (d) => d.transform());\n  }\n\n  static setPosition(node: d3.Selection<Node>, position: NodePosition[]): void {\n    node.attr(\"transform\", (d, i) => {\n      d.x = position[i].x;\n      d.y = position[i].y;\n      return d.transform();\n    });\n  }\n\n  static reset(): void {\n    Node.all = null;\n  }\n}\n\nconst Eventable = (Base: typeof NodeBase) => {\n  class EventableNode extends Base {\n    private dispatch: d3.Dispatch;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(data: NodeDataType, id: number, metaKeys: string[], color: any, tooltip: boolean) {\n      super(data, id, metaKeys, color, tooltip);\n\n      this.dispatch = d3.dispatch(\"rendered\");\n    }\n\n    static render(layer, nodes) {\n      const node = super.render(layer, nodes);\n\n      node.each(function(this: SVGGElement, d: Node & EventableNode) {\n        d.dispatch.rendered(this);\n      });\n\n      return node;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    on(name: string, callback: (element: SVGGElement) => any): void {\n      this.dispatch.on(name, callback);\n    }\n  }\n\n  return EventableNode;\n};\n\nconst Pluggable = (Base: typeof NodeBase) => {\n  class Node extends Base {\n    private static pluginConstructors: Constructor[] = [];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(data: NodeDataType, id: number, metaKeys: string[], color: any, tooltip: boolean) {\n      super(data, id, metaKeys, color, tooltip);\n\n      for (const constructor of Node.pluginConstructors) {\n        // Call Pluggable at last as constructor may call methods defined in other classes\n        constructor.bind(this)(data, id, metaKeys, color, tooltip);\n      }\n    }\n\n    static registerConstructor(func: Constructor): void {\n      Node.pluginConstructors.push(func);\n    }\n  }\n\n  return Node;\n};\n\nclass EventableNode extends Eventable(NodeBase) {\n}\n\n// Call Pluggable at last as constructor may call methods defined in other classes\nclass Node extends Pluggable(EventableNode) {\n}\n\nexport { Node };\n","import * as d3 from \"d3\";\n\nimport { Constructor as NodeConstructor, Node, NodeDataType } from \"../../../src/node\";\nimport { PluginClass } from \"../../../src/plugin\";\nimport { classify } from \"../../../src/util\";\n\ntype Options = {\n  showKey?: string;\n  hideKey?: string;\n}\n\nclass RemovableNode extends Node {\n  public selected;\n\n  public toggleSelected(): void {\n    this.selected = !this.selected;\n  }\n\n  public reset(): void {\n    this.selected = false;\n  }\n\n  public textColor(): string {\n    return this.selected ? \"red\" : \"black\";\n  }\n}\n\nexport const RemovableNodePlugin: PluginClass = class RemovableNodePlugin {\n  private static showKey = \"Escape\";\n  private static hideKey = \"d\";\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static load(Group, Node, Link, options: Options = {}): void {\n    if (options.showKey) {\n      RemovableNodePlugin.showKey = options.showKey;\n    }\n    if (options.hideKey) {\n      RemovableNodePlugin.hideKey = options.hideKey;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any\n    Node.registerConstructor(function(data: NodeDataType, id: number, metaKeys: string[], color: any, tooltip: boolean) {\n      this.selected = false;\n\n      this.on(\"rendered\", (element: SVGGElement) => {\n        RemovableNodePlugin.configureRemovableNode(element);\n      });\n\n    } as NodeConstructor);\n\n    RemovableNodePlugin.configureRemovableNodes();\n\n    // Copy methods\n    Node.prototype.toggleSelected = RemovableNode.prototype.toggleSelected;\n    Node.prototype.reset = RemovableNode.prototype.reset;\n    Node.prototype.textColor = RemovableNode.prototype.textColor;\n  }\n\n  /**\n   * Configure keyboard event listener to show or hide Nodes and Links\n   */\n  private static configureRemovableNodes(): void {\n    d3.select(\"body\").on(\"keydown\", () => {\n      switch ((d3.event as KeyboardEvent).key) {\n        case RemovableNodePlugin.showKey:\n          RemovableNodePlugin.show();\n          break;\n        case RemovableNodePlugin.hideKey:\n          RemovableNodePlugin.hide();\n      }\n    });\n  }\n\n  /**\n   * Configure click event listener to select Nodes\n   */\n  private static configureRemovableNode(element: SVGGElement): void {\n    const d3Element = d3.select(element);\n    d3Element.on(\"click.removableNode\", function(this: SVGGElement, d: RemovableNode) {\n      // Do nothing for dragging\n      if ((d3.event as MouseEvent).defaultPrevented) {\n        return;\n      }\n\n      d.toggleSelected();\n      RemovableNodePlugin.applyColor(this);\n    });\n  }\n\n  private static applyColor(element: SVGGElement): void {\n    d3.select(element).select(\"text tspan\").style(\"fill\", (d: RemovableNode) => d.textColor());\n  }\n\n  private static show(): void {\n    d3.selectAll(\".node\")\n      .style(\"display\", \"inline\")\n      .each(function(this: SVGGElement, d: RemovableNode) {\n        d.reset();\n        RemovableNodePlugin.applyColor(this);\n      });\n\n    RemovableNodePlugin.showLinks();\n  }\n\n  private static hide(): void {\n    d3.selectAll(\".node\")\n      .style(\"display\", (d: RemovableNode) => {\n        if (d.selected) {\n          // Hide connected elements\n          RemovableNodePlugin.hideLinks(d.name);\n          RemovableNodePlugin.hideToolTips(d.name);\n          return \"none\";\n        }\n\n        return \"inline\";\n      });\n  }\n\n  private static showLinks(): void {\n    d3.selectAll(`.link`)\n      .style(\"display\", \"inline\");\n  }\n\n  private static hideLinks(nodeName: string): void {\n    d3.selectAll(`.link.${classify(nodeName)}`)\n      .style(\"display\", \"none\");\n  }\n\n  private static hideToolTips(nodeName: string): void {\n    d3.selectAll(`.tooltip.${classify(nodeName)}`)\n      .attr(\"visibility\", \"hidden\");\n  }\n};\n\nexport default RemovableNodePlugin;\n"],"sourceRoot":""}