{"version":3,"file":"plugin.min.js","mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,EAAQG,QAAQ,YAC7B,GAAqB,mBAAXC,QAAyBA,OAAOC,IAC9CD,OAAO,CAAC,MAAOJ,OACX,CACJ,IAAIM,EAAuB,iBAAZL,QAAuBD,EAAQG,QAAQ,OAASH,EAAQD,EAAS,IAChF,IAAI,IAAIQ,KAAKD,GAAuB,iBAAZL,QAAuBA,QAAUF,GAAMQ,GAAKD,EAAEC,IAPxE,CASGC,MAAM,SAASC,GAClB,M,kCCVAP,EAAOD,QAAUQ,ICCbC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaZ,QAGrB,IAAIC,EAASQ,EAAyBE,GAAY,CAGjDX,QAAS,IAOV,OAHAc,EAAoBH,GAAUV,EAAQA,EAAOD,QAASU,GAG/CT,EAAOD,QCpBfU,EAAoBK,EAAI,CAACf,EAASgB,KACjC,IAAI,IAAIC,KAAOD,EACXN,EAAoBQ,EAAEF,EAAYC,KAASP,EAAoBQ,EAAElB,EAASiB,IAC5EE,OAAOC,eAAepB,EAASiB,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EP,EAAoBQ,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFd,EAAoBkB,EAAK5B,IACH,oBAAX6B,QAA0BA,OAAOC,aAC1CX,OAAOC,eAAepB,EAAS6B,OAAOC,YAAa,CAAEC,MAAO,WAE7DZ,OAAOC,eAAepB,EAAS,aAAc,CAAE+B,OAAO,K,0FCHhD,MAAMC,EAEXC,YAAoBC,EAAmCC,GAAnC,KAAAD,KAAAA,EAAmC,KAAAC,SAAAA,EAGvDb,IAAIc,GACF,OAAOC,KAAKC,MAAMF,GAAMG,QAAQC,GAAyB,iBAAZA,EAAET,QAGjDO,MAAMF,GACJ,OAAKC,KAAKH,KAGNG,KAAKF,SACAE,KAAKI,kBAAkBL,GAEvBC,KAAKK,qBAAqBN,GAL1B,GAQXK,kBAAkBL,GAChB,MAAMF,EAAO,GAOb,OALAE,EAAKO,SAASH,IACRH,KAAKH,KAAKM,IAAMH,KAAKH,KAAKM,GAAGH,KAAKF,WACpCD,EAAKU,KAAK,CAAEC,MAAOL,EAAGT,MAAOM,KAAKH,KAAKM,GAAGH,KAAKF,eAG5CD,EAGTQ,qBAAqBN,GACnB,MAAMF,EAAO,GAOb,OALAE,EAAKO,SAASH,IACRH,KAAKH,KAAKM,IACZN,EAAKU,KAAK,CAAEC,MAAOL,EAAGT,MAAOM,KAAKH,KAAKM,QAGpCN,GCxCJ,SAASY,EAASC,GACvB,OAAOA,EAAOC,QAAQ,IAAK,KAAKC,cCgBlC,MAAMC,EAmBJjB,YAAYC,EAA2BiB,EAAYC,EAA4BC,EAAoBC,GAA5D,KAAAH,GAAAA,EAAwC,KAAAE,MAAAA,EAAoB,KAAAC,QAAAA,EACjGjB,KAAKkB,KAAOrB,EAAKqB,KACjBlB,KAAKmB,MAA8B,iBAAftB,EAAKsB,MAAqB,CAACtB,EAAKsB,OAAUtB,EAAKsB,OAAS,GAC5EnB,KAAKoB,KAAOvB,EAAKuB,KACjBpB,KAAKqB,KAAO,IAAI1B,EAASE,EAAKwB,MAAMpC,IAAI8B,GACxCf,KAAKsB,WAAazB,EAAKW,OAAS,GAEhCR,KAAKuB,MAAQ,GACbvB,KAAKwB,OAAS,GACdxB,KAAKyB,QAAU,EACfzB,KAAK0B,YAAc,QAEnB1B,KAAK2B,SAASb,EAAIjB,EAAKqB,MAGzBS,SAASb,EAAYI,GACnBU,EAAKC,IAAMD,EAAKC,KAAO,GACvBD,EAAKC,IAAIX,GAAQJ,EAGnBgB,YAGE,MAAO,aAFG9B,KAAK+B,EAAI/B,KAAKuB,MAAQ,EAAIvB,KAAKyB,YAC/BzB,KAAKgC,EAAIhC,KAAKwB,OAAS,EAAIxB,KAAKyB,WAI5CQ,YACE,OAAOjC,KAAKuB,MAAQ,EAAIvB,KAAKyB,QAG/BS,aACE,OAAOlC,KAAKwB,OAAS,EAAIxB,KAAKyB,QAGhCU,WACE,OAAOnC,KAAKuB,MAAQ,EAGtBa,WACE,OAAOpC,KAAKwB,OAAS,EAGvBa,gBAAgBnB,GACd,QAAuB1C,IAAnBoD,EAAKC,IAAIX,GACX,KAAM,iBAAiBA,KACzB,OAAOU,EAAKC,IAAIX,GAIlBmB,cAAcC,EAA0BC,GACtC,MAAMC,EAAOF,EAAMG,UAAU,SAC1B5C,KAAK0C,GACLG,QACAC,OAAO,KACPC,KAAK,MAAOlE,GAAM+B,EAAS/B,EAAEwC,QAC7B0B,KAAK,QAASlE,GAAMA,EAAEwC,OACtB0B,KAAK,aAAclE,GAAMA,EAAEoD,cAW9B,OATAU,EAAKK,MAAK,SAA4BnE,GAChCA,EAAE0C,KACJQ,EAAKkB,YAAY9C,MAEjB4B,EAAKmB,WAAW/C,MAElB4B,EAAKoB,WAAWhD,SAGXwC,EAGDH,kBAAkBY,GACxB,MAAMC,EAAQ,SAAUD,GAAkCN,OAAO,QAC9DC,KAAK,cAAe,UACpBA,KAAK,KAAMlE,GAAMA,EAAEyD,aACnBS,KAAK,KAAMlE,GAAMA,EAAE0D,aACtBc,EAAKP,OAAO,SACTO,MAAMxE,GAAMA,EAAEwC,OACd0B,KAAK,KAAMlE,GAAMA,EAAEyD,aAEtBe,EAAKL,MAAMnE,IAEJA,EAAEuC,SACLW,EAAKuB,aAAaD,EAAMxE,EAAE2C,SAKxBgB,oBAAoBY,EAA+B5B,GACzDA,EAAKf,SAAS8C,IACZH,EAAUN,OAAO,SACdC,KAAK,KAAMlE,GAAMA,EAAEyD,aACnBS,KAAK,MAAOlE,GAAMA,EAAEgD,cACpBkB,KAAK,QAASQ,EAAE5C,OAChB0C,KAAKE,EAAE1D,UAIN2C,mBAAmBY,GACxB,SAAUA,GACRL,KAAK,SAAUlE,GAAM,cAAc+B,EAAS/B,EAAEwC,SAASxC,EAAE4C,eACzDqB,OAAO,SACPC,KAAK,cAAelE,GAAMA,EAAE0C,OAC5BwB,KAAK,SAAUlE,GAAMA,EAAEuD,cACvBW,KAAK,UAAWlE,GAAMA,EAAEwD,eAGrBG,kBAAkBY,GACvB,SAAUA,GACRL,KAAK,SAAUlE,GAAM,aAAa+B,EAAS/B,EAAEwC,SAASxC,EAAE4C,eACxDqB,OAAO,QACPC,KAAK,SAAUlE,GAAMA,EAAEuD,cACvBW,KAAK,UAAWlE,GAAMA,EAAEwD,eACxBU,KAAK,KAAM,GACXA,KAAK,KAAM,GACXS,MAAM,QAAS3E,GAAMA,EAAEsC,UAG5BqB,YAAYG,GACVA,EAAKI,KAAK,aAAclE,GAAMA,EAAEoD,cAGlCO,mBAAmBG,EAA0Bc,GAC3Cd,EAAKI,KAAK,aAAa,CAAClE,EAAGT,KACzBS,EAAEqD,EAAIuB,EAASrF,GAAG8D,EAClBrD,EAAEsD,EAAIsB,EAASrF,GAAG+D,EACXtD,EAAEoD,eAIbO,eACET,EAAKC,IAAM,MAIf,MAAM0B,EAAaC,GACjB,cAA4BA,EAI1B5D,YAAYC,EAAoBiB,EAAYC,EAAoBC,EAAYC,GAC1EwC,MAAM5D,EAAMiB,EAAIC,EAAUC,EAAOC,GAEjCjB,KAAK0D,SAAW,WAAY,YAG9BrB,cAAcC,EAAOC,GACnB,MAAMC,EAAOiB,MAAME,OAAOrB,EAAOC,GAMjC,OAJAC,EAAKK,MAAK,SAA4BnE,GACpCA,EAAEgF,SAASE,SAAS5D,SAGfwC,EAITqB,GAAG3C,EAAc4C,GACf9D,KAAK0D,SAASG,GAAG3C,EAAM4C,KAOvBC,EAAaP,IACjB,MAAM5B,UAAa4B,EAIjB5D,YAAYC,EAAoBiB,EAAYC,EAAoBC,EAAYC,GAC1EwC,MAAM5D,EAAMiB,EAAIC,EAAUC,EAAOC,GAEjC,IAAK,MAAMrB,KAAegC,EAAKoC,mBAE7BpE,EAAYqE,KAAKjE,KAAjBJ,CAAuBC,EAAMiB,EAAIC,EAAUC,EAAOC,GAItDoB,2BAA2B6B,GACzBtC,EAAKoC,mBAAmBzD,KAAK2D,IAIjC,OAjBiB,EAAAF,mBAAoC,GAiB9CpC,GAGT,MAAMuC,UAAsBZ,EAAU1C,KAItC,MAAMe,UAAamC,EAAUI,K,MCvN7B,MAAMC,UAAsBxC,EAGnByC,iBACLrE,KAAKsE,UAAYtE,KAAKsE,SAGjBC,QACLvE,KAAKsE,UAAW,EAGXE,YACL,OAAOxE,KAAKsE,SAAW,MAAQ,SAI5B,MAAMG,GAAmB,EAAgB,MAAMA,EAKpDpC,YAAYqC,EAAO9C,EAAM+C,EAAMC,EAAmB,IAC5CA,EAAQC,UACVJ,EAAoBI,QAAUD,EAAQC,SAEpCD,EAAQE,UACVL,EAAoBK,QAAUF,EAAQE,SAIxClD,EAAKmD,qBAAoB,SAASlF,EAAoBiB,EAAYC,EAAoBC,EAAYC,GAChGjB,KAAKsE,UAAW,EAEhBtE,KAAK6D,GAAG,YAAamB,IACnBP,EAAoBQ,uBAAuBD,SAK/CP,EAAoBS,0BAGpBtD,EAAKxC,UAAUiF,eAAiBD,EAAchF,UAAUiF,eACxDzC,EAAKxC,UAAUmF,MAAQH,EAAchF,UAAUmF,MAC/C3C,EAAKxC,UAAUoF,UAAYJ,EAAchF,UAAUoF,UAM7CnC,iCACN,SAAU,QAAQwB,GAAG,WAAW,KAC9B,OAAS,aACP,KAAKY,EAAoBI,QACvBJ,EAAoBU,OACpB,MACF,KAAKV,EAAoBK,QACvBL,EAAoBW,WAQpB/C,8BAA8B2C,GAClB,SAAUA,GAClBnB,GAAG,uBAAuB,SAA4BnF,GAEzD,2BAILA,EAAE2F,iBACFI,EAAoBY,WAAWrF,UAI3BqC,kBAAkB2C,GACxB,SAAUA,GAASM,OAAO,cAAcjC,MAAM,QAAS3E,GAAqBA,EAAE8F,cAGxEnC,cACN,YAAa,SACVgB,MAAM,UAAW,UACjBR,MAAK,SAA4BnE,GAChCA,EAAE6F,QACFE,EAAoBY,WAAWrF,SAGnCyE,EAAoBc,YAGdlD,cACN,YAAa,SACVgB,MAAM,WAAY3E,GACbA,EAAE4F,UAEJG,EAAoBe,UAAU9G,EAAEwC,MAChCuD,EAAoBgB,aAAa/G,EAAEwC,MAC5B,QAGF,WAILmB,mBACN,YAAa,SACVgB,MAAM,UAAW,UAGdhB,iBAAiBqD,GACvB,YAAa,SAASjF,EAASiF,MAC5BrC,MAAM,UAAW,QAGdhB,oBAAoBqD,GAC1B,YAAa,YAAYjF,EAASiF,MAC/B9C,KAAK,aAAc,YAtGT,EAAAiC,QAAU,SACV,EAAAC,QAAU,I,GAyG3B,K","sources":["webpack://inet-henge/webpack/universalModuleDefinition","webpack://inet-henge/external umd \"d3\"","webpack://inet-henge/webpack/bootstrap","webpack://inet-henge/webpack/runtime/define property getters","webpack://inet-henge/webpack/runtime/hasOwnProperty shorthand","webpack://inet-henge/webpack/runtime/make namespace object","webpack://inet-henge/./src/meta_data.ts","webpack://inet-henge/./src/util.ts","webpack://inet-henge/./src/node.ts","webpack://inet-henge/./plugins/removable_node/src/plugin.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"d3\")) : factory(root[\"d3\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function(__WEBPACK_EXTERNAL_MODULE__990__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__990__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export type MetaDataType = { class: string, value: any }  // eslint-disable-line @typescript-eslint/no-explicit-any\n\nexport class MetaData {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(private data: Record<string, any>, private extraKey?: string) {\n  }\n\n  get(keys: string[]): MetaDataType[] {\n    return this.slice(keys).filter((k) => typeof k.value === \"string\");\n  }\n\n  slice(keys: string[]): MetaDataType[] {\n    if (!this.data)\n      return [];\n\n    if (this.extraKey)\n      return this.sliceWithExtraKey(keys);\n    else\n      return this.sliceWithoutExtraKey(keys);\n  }\n\n  sliceWithExtraKey(keys: string[]): MetaDataType[] {\n    const data = [];\n\n    keys.forEach((k) => {\n      if (this.data[k] && this.data[k][this.extraKey])\n        data.push({ class: k, value: this.data[k][this.extraKey] });\n    });\n\n    return data;\n  }\n\n  sliceWithoutExtraKey(keys: string[]): MetaDataType[] {\n    const data = [];\n\n    keys.forEach((k) => {\n      if (this.data[k])\n        data.push({ class: k, value: this.data[k] });\n    });\n\n    return data;\n  }\n}\n","export function classify(string: string): string {\n  return string.replace(\" \", \"-\").toLowerCase();\n}\n","import * as d3 from \"d3\";\n\nimport { MetaData, MetaDataType } from \"./meta_data\";\nimport { NodePosition } from \"./position_cache\";\nimport { classify } from \"./util\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type Constructor = (data: NodeDataType, id: number, metaKeys: string[], color: any, tooltip: boolean) => void;\n\nexport type NodeDataType = {\n  name: string,\n  group: string[],\n  icon: string,\n  meta: Record<string, any>,  // eslint-disable-line @typescript-eslint/no-explicit-any\n  class: string,\n}\n\nclass NodeBase {\n  private static all: Record<string, any>;  // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  public name: string;\n  public group: string[];\n  public meta: MetaDataType[];\n  public x: number;\n  public y: number;\n\n  private icon: string;\n  private extraClass: string;\n  private width: number;\n  private height: number;\n  private padding: number;\n  private tspanOffset: string;\n\n  // Fix @types/d3/index.d.ts. Should be \"d3.scale.Ordinal<number, string>\" but \"d3.scale.Ordinal<string, string>\" somehow\n  // Also, it should have accepted undefined\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(data: NodeDataType, public id: number, metaKeys: string[], private color: any, private tooltip: boolean) {\n    this.name = data.name;\n    this.group = typeof data.group === \"string\" ? [data.group] : (data.group || []);\n    this.icon = data.icon;\n    this.meta = new MetaData(data.meta).get(metaKeys);\n    this.extraClass = data.class || \"\";\n\n    this.width = 60;\n    this.height = 40;\n    this.padding = 3;\n    this.tspanOffset = \"1.1em\";\n\n    this.register(id, data.name);\n  }\n\n  register(id: number, name: string): void {\n    Node.all = Node.all || {};\n    Node.all[name] = id;\n  }\n\n  transform(): string {\n    const x = this.x - this.width / 2 + this.padding;\n    const y = this.y - this.height / 2 + this.padding;\n    return `translate(${x}, ${y})`;\n  }\n\n  nodeWidth(): number {\n    return this.width - 2 * this.padding;\n  }\n\n  nodeHeight(): number {\n    return this.height - 2 * this.padding;\n  }\n\n  xForText(): number {\n    return this.width / 2;\n  }\n\n  yForText(): number {\n    return this.height / 2;\n  }\n\n  static idByName(name: string): number {\n    if (Node.all[name] === undefined)\n      throw `Unknown node \"${name}\"`;\n    return Node.all[name];\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static render(layer: d3.Selection<any>, nodes: Node[]): d3.Selection<Node> {\n    const node = layer.selectAll(\".node\")\n      .data(nodes)\n      .enter()\n      .append(\"g\")\n      .attr(\"id\", (d) => classify(d.name))\n      .attr(\"name\", (d) => d.name)\n      .attr(\"transform\", (d) => d.transform());\n\n    node.each(function(this: SVGGElement, d) {\n      if (d.icon)\n        Node.appendImage(this);\n      else\n        Node.appendRect(this);\n\n      Node.appendText(this);\n    });\n\n    return node;\n  }\n\n  private static appendText(container: SVGGElement): void {\n    const text = (d3.select(container) as d3.Selection<Node>).append(\"text\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"x\", (d) => d.xForText())\n      .attr(\"y\", (d) => d.yForText());\n    text.append(\"tspan\")\n      .text((d) => d.name)\n      .attr(\"x\", (d) => d.xForText());\n\n    text.each((d) => {\n      // Show meta only when \"tooltip\" option is not configured\n      if (!d.tooltip) {\n        Node.appendTspans(text, d.meta);\n      }\n    });\n  }\n\n  private static appendTspans(container: d3.Selection<Node>, meta: MetaDataType[]): void {\n    meta.forEach((m) => {\n      container.append(\"tspan\")\n        .attr(\"x\", (d) => d.xForText())\n        .attr(\"dy\", (d) => d.tspanOffset)\n        .attr(\"class\", m.class)\n        .text(m.value);\n    });\n  }\n\n  private static appendImage(container: SVGGElement): void {\n    (d3.select(container) as d3.Selection<Node>)\n      .attr(\"class\", (d) => `node image ${classify(d.name)} ${d.extraClass}`)\n      .append(\"image\")\n      .attr(\"xlink:href\", (d) => d.icon)\n      .attr(\"width\", (d) => d.nodeWidth())\n      .attr(\"height\", (d) => d.nodeHeight());\n  }\n\n  private static appendRect(container: SVGGElement): void {\n    (d3.select(container) as d3.Selection<Node>)\n      .attr(\"class\", (d) => `node rect ${classify(d.name)} ${d.extraClass}`)\n      .append(\"rect\")\n      .attr(\"width\", (d) => d.nodeWidth())\n      .attr(\"height\", (d) => d.nodeHeight())\n      .attr(\"rx\", 5)\n      .attr(\"ry\", 5)\n      .style(\"fill\", (d) => d.color());\n  }\n\n  static tick(node: d3.Selection<Node>): void {\n    node.attr(\"transform\", (d) => d.transform());\n  }\n\n  static setPosition(node: d3.Selection<Node>, position: NodePosition[]): void {\n    node.attr(\"transform\", (d, i) => {\n      d.x = position[i].x;\n      d.y = position[i].y;\n      return d.transform();\n    });\n  }\n\n  static reset(): void {\n    Node.all = null;\n  }\n}\n\nconst Eventable = (Base: typeof NodeBase) => {\n  class EventableNode extends Base {\n    private dispatch: d3.Dispatch;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(data: NodeDataType, id: number, metaKeys: string[], color: any, tooltip: boolean) {\n      super(data, id, metaKeys, color, tooltip);\n\n      this.dispatch = d3.dispatch(\"rendered\");\n    }\n\n    static render(layer, nodes) {\n      const node = super.render(layer, nodes);\n\n      node.each(function(this: SVGGElement, d: Node & EventableNode) {\n        d.dispatch.rendered(this);\n      });\n\n      return node;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    on(name: string, callback: (element: SVGGElement) => any): void {\n      this.dispatch.on(name, callback);\n    }\n  }\n\n  return EventableNode;\n};\n\nconst Pluggable = (Base: typeof NodeBase) => {\n  class Node extends Base {\n    private static pluginConstructors: Constructor[] = [];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(data: NodeDataType, id: number, metaKeys: string[], color: any, tooltip: boolean) {\n      super(data, id, metaKeys, color, tooltip);\n\n      for (const constructor of Node.pluginConstructors) {\n        // Call Pluggable at last as constructor may call methods defined in other classes\n        constructor.bind(this)(data, id, metaKeys, color, tooltip);\n      }\n    }\n\n    static registerConstructor(func: Constructor): void {\n      Node.pluginConstructors.push(func);\n    }\n  }\n\n  return Node;\n};\n\nclass EventableNode extends Eventable(NodeBase) {\n}\n\n// Call Pluggable at last as constructor may call methods defined in other classes\nclass Node extends Pluggable(EventableNode) {\n}\n\nexport { Node };\n","import * as d3 from \"d3\";\n\nimport { Constructor as NodeConstructor, Node, NodeDataType } from \"../../../src/node\";\nimport { PluginClass } from \"../../../src/plugin\";\nimport { classify } from \"../../../src/util\";\n\ntype Options = {\n  showKey?: string;\n  hideKey?: string;\n}\n\nclass RemovableNode extends Node {\n  public selected;\n\n  public toggleSelected(): void {\n    this.selected = !this.selected;\n  }\n\n  public reset(): void {\n    this.selected = false;\n  }\n\n  public textColor(): string {\n    return this.selected ? \"red\" : \"black\";\n  }\n}\n\nexport const RemovableNodePlugin: PluginClass = class RemovableNodePlugin {\n  private static showKey = \"Escape\";\n  private static hideKey = \"d\";\n\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  static load(Group, Node, Link, options: Options = {}): void {\n    if (options.showKey) {\n      RemovableNodePlugin.showKey = options.showKey;\n    }\n    if (options.hideKey) {\n      RemovableNodePlugin.hideKey = options.hideKey;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any\n    Node.registerConstructor(function(data: NodeDataType, id: number, metaKeys: string[], color: any, tooltip: boolean) {\n      this.selected = false;\n\n      this.on(\"rendered\", (element: SVGGElement) => {\n        RemovableNodePlugin.configureRemovableNode(element);\n      });\n\n    } as NodeConstructor);\n\n    RemovableNodePlugin.configureRemovableNodes();\n\n    // Copy methods\n    Node.prototype.toggleSelected = RemovableNode.prototype.toggleSelected;\n    Node.prototype.reset = RemovableNode.prototype.reset;\n    Node.prototype.textColor = RemovableNode.prototype.textColor;\n  }\n\n  /**\n   * Configure keyboard event listener to show or hide Nodes and Links\n   */\n  private static configureRemovableNodes(): void {\n    d3.select(\"body\").on(\"keydown\", () => {\n      switch ((d3.event as KeyboardEvent).key) {\n        case RemovableNodePlugin.showKey:\n          RemovableNodePlugin.show();\n          break;\n        case RemovableNodePlugin.hideKey:\n          RemovableNodePlugin.hide();\n      }\n    });\n  }\n\n  /**\n   * Configure click event listener to select Nodes\n   */\n  private static configureRemovableNode(element: SVGGElement): void {\n    const d3Element = d3.select(element);\n    d3Element.on(\"click.removableNode\", function(this: SVGGElement, d: RemovableNode) {\n      // Do nothing for dragging\n      if ((d3.event as MouseEvent).defaultPrevented) {\n        return;\n      }\n\n      d.toggleSelected();\n      RemovableNodePlugin.applyColor(this);\n    });\n  }\n\n  private static applyColor(element: SVGGElement): void {\n    d3.select(element).select(\"text tspan\").style(\"fill\", (d: RemovableNode) => d.textColor());\n  }\n\n  private static show(): void {\n    d3.selectAll(\".node\")\n      .style(\"display\", \"inline\")\n      .each(function(this: SVGGElement, d: RemovableNode) {\n        d.reset();\n        RemovableNodePlugin.applyColor(this);\n      });\n\n    RemovableNodePlugin.showLinks();\n  }\n\n  private static hide(): void {\n    d3.selectAll(\".node\")\n      .style(\"display\", (d: RemovableNode) => {\n        if (d.selected) {\n          // Hide connected elements\n          RemovableNodePlugin.hideLinks(d.name);\n          RemovableNodePlugin.hideToolTips(d.name);\n          return \"none\";\n        }\n\n        return \"inline\";\n      });\n  }\n\n  private static showLinks(): void {\n    d3.selectAll(`.link`)\n      .style(\"display\", \"inline\");\n  }\n\n  private static hideLinks(nodeName: string): void {\n    d3.selectAll(`.link.${classify(nodeName)}`)\n      .style(\"display\", \"none\");\n  }\n\n  private static hideToolTips(nodeName: string): void {\n    d3.selectAll(`.tooltip.${classify(nodeName)}`)\n      .attr(\"visibility\", \"hidden\");\n  }\n};\n\nexport default RemovableNodePlugin;\n"],"names":["root","factory","exports","module","require","define","amd","a","i","self","__WEBPACK_EXTERNAL_MODULE__990__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","MetaData","constructor","data","extraKey","keys","this","slice","filter","k","sliceWithExtraKey","sliceWithoutExtraKey","forEach","push","class","classify","string","replace","toLowerCase","NodeBase","id","metaKeys","color","tooltip","name","group","icon","meta","extraClass","width","height","padding","tspanOffset","register","Node","all","transform","x","y","nodeWidth","nodeHeight","xForText","yForText","static","layer","nodes","node","selectAll","enter","append","attr","each","appendImage","appendRect","appendText","container","text","appendTspans","m","style","position","Eventable","Base","super","dispatch","render","rendered","on","callback","Pluggable","pluginConstructors","bind","func","EventableNode","RemovableNode","toggleSelected","selected","reset","textColor","RemovableNodePlugin","Group","Link","options","showKey","hideKey","registerConstructor","element","configureRemovableNode","configureRemovableNodes","show","hide","applyColor","select","showLinks","hideLinks","hideToolTips","nodeName"],"sourceRoot":""}